.TH autopkgtest-virt-lxc 1 2013 "Linux Programmer's Manual"
.SH NAME
autopkgtest-virt-lxc \- autopkgtest virtualisation server using LXC

.SH SYNOPSIS
.BI "autopkgtest " "[...] " "-- lxc"
.RI [ options ]
.I lxc\-container
.RI [ "-- extra lxc-start args..." ]

.SH DESCRIPTION
.B autopkgtest-virt-lxc
provides an autopkgtest virtualisation server using LXC. It adapts the raw
functionality provided by the
.BR lxc- *
tools for use by autopkgtest.

Normally
.B autopkgtest-virt-lxc
will be invoked by
.BR autopkgtest .

You can conveniently create a suitable container using the
.BR autopkgtest-build-lxc (1)
script.

.SH REQUIREMENTS
.B autopkgtest-virt-lxc
assumes that you have already prepared a suitable Debian based LXC container.
See
.BR lxc-create (1)
for how to create containers, and particularly
.BR autopkgtest-build-lxc (1)
for conveniently creating standard autopkgtest containers.

.SH OPTIONS

.TP
.BR -e " | " \-\-ephemeral
This option makes use of lxc-start-ephemeral to create temporary container
overlays, instead of the default behaviour of cloning your containers.

This can be used to dramatically improve performance, although you may see
issues due to the overlayfs filesystem as used by lxc-start-ephemeral not being
completely transparent (e. g. seen with tar failing when running LXC within
Qemu). Before using this option in automation you should ensure that tests that
involve large I/O work as expected.

Note that ephemeral containers do not support rebooting with LXC 1.x. This does
work with LXC >= 2.x.

.TP
.BR \-s " | " \-\-sudo
Run lxc-* commands through sudo; use this option if you run autopkgtest as normal
user, but need to run the container itself as root (if you use LXC system level
containers).

.TP
.BI " \-\-name" " NAME
Set a custom name for the temporary container in which to run the test. This is
autogenerated by default (autopkgtest-lxc-\fIXXXXXX\fR), but if you have a way to
generate more expressive unique names you can use that to make it easier to map
containers to running tests.

.TP
.BR \-d " | " \-\-debug
Enables debugging output.

.PP
You can pass additional options to LXC: Anything after a
.B --
gets passed verbatim to
.BR lxc-start / lxc-start-ephemeral .

.SH INPUT, OUTPUT AND EXIT STATUS
The behaviour of
.B autopkgtest-virt-lxc
is as described by the AutomatedTesting virtualisation regime
specification.

.SH NOTES

\fBautopkgtest\fR does not run \fBapt-get update\fR at the start of a package
build, which can cause a build failure if you are using a development release
template. You will need to run \fBapt-get update\fR in the template yourself
(e. g. using \fB\-\-setup\-commands\fR).

.SH EXAMPLE

Create a suitable debootstrap-based container for Debian or Ubuntu template, e.
g. a Debian sid one (will be named
.B autopkgtest-sid\fR):

.RS
.EX
autopkgtest-build-lxc debian sid
.EE
.RE

Or an Ubuntu one based on the cloud images (faster than autopkgtest-build-lxc's
"ubuntu" template with debootstrap, but much bigger):

.RS
.EX
lxc-create -t ubuntu-cloud -n \fIautopkgtest-trusty\fR -- -r trusty -d daily
.EE
.RE

Run tests against \fIhello_2.8\-4.dsc\fR, using the LXC container \fIautopkgtest-sid\fR,
and with an ephemeral overlay for speed:

.RS
.EX
autopkgtest \fIhello_2.8\-4.dsc\fR -- lxc -e \fIautopkgtest-sid\fR
.EE
.RE

.SH SEE ALSO
\fBautopkgtest\fR(1),
\fBautopkgtest\-build-lxc\fR(1),
\fBlxc\-create\fR(1),
\fB/usr/share/doc/autopkgtest/\fR.

.SH AUTHORS AND COPYRIGHT
.B autopkgtest-virt-lxc
was written by Robie Basak <robie.basak@canonical.com> and Martin Pitt
<martin.pitt@ubuntu.com>.

This manpage is part of autopkgtest, a tool for testing Debian binary
packages.  autopkgtest is Copyright (C) 2006-2013 Canonical Ltd and others.

See \fB/usr/share/doc/autopkgtest/CREDITS\fR for the list of
contributors and full copying conditions.
